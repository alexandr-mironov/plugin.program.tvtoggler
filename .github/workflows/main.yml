# This is a basic workflow to help you get started with Actions
name: Release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    tags:
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build zip files
        run: |
          sudo apt-get install libxml2-utils
          make build release=1
      - name: Get zip filename
        id: get-zip-filename
        run: |
          echo ::set-output name=zip-filename::$(cd ..;ls plugin.program.tvtoggler-*.zip | head -1)
      - name: Get body
        id: get-body
        run: |
          description=$(sed '/v[0-9\.]*\s([0-9-]*)/d;/^$/,$d' changelog.txt)
          echo $description
          description="${description//'%'/'%25'}"
          description="${description//$'\n'/'%0A'}"
          description="${description//$'\r'/'%0D'}"
          echo ::set-output name=body::$description
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}-Leia
          body: ${{ steps.get-body.outputs.body }}
          draft: false
          prerelease: false
      - name: Upload zip file
        id: upload-zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: ${{ steps.get-zip-filename.outputs.zip-filename }}
          asset_path: ../${{ steps.get-zip-filename.outputs.zip-filename }}
          asset_content_type: application/zip
